% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/steps_states.R
\name{Wait}
\alias{Wait}
\title{Wait State Class}
\description{
Wait state causes the interpreter to delay the machine from continuing
             for a specified time. The time can be specified as a wait duration,
             specified in seconds, or an absolute expiry time, specified as an ISO-8601
             extended offset date-time format string.
}
\section{Super classes}{
\code{\link[stepfunctions:Block]{stepfunctions::Block}} -> \code{\link[stepfunctions:State]{stepfunctions::State}} -> \code{Wait}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Wait$new()}}
\item \href{#method-allowed_fields}{\code{Wait$allowed_fields()}}
\item \href{#method-clone}{\code{Wait$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="stepfunctions" data-topic="Block" data-id="is_field_allowed">}\href{../../stepfunctions/html/Block.html#method-is_field_allowed}{\code{stepfunctions::Block$is_field_allowed()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="stepfunctions" data-topic="Block" data-id="to_json">}\href{../../stepfunctions/html/Block.html#method-to_json}{\code{stepfunctions::Block$to_json()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="stepfunctions" data-topic="State" data-id=".next">}\href{../../stepfunctions/html/State.html#method-.next}{\code{stepfunctions::State$.next()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="stepfunctions" data-topic="State" data-id="accept">}\href{../../stepfunctions/html/State.html#method-accept}{\code{stepfunctions::State$accept()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="stepfunctions" data-topic="State" data-id="add_catch">}\href{../../stepfunctions/html/State.html#method-add_catch}{\code{stepfunctions::State$add_catch()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="stepfunctions" data-topic="State" data-id="add_retry">}\href{../../stepfunctions/html/State.html#method-add_retry}{\code{stepfunctions::State$add_retry()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="stepfunctions" data-topic="State" data-id="format">}\href{../../stepfunctions/html/State.html#method-format}{\code{stepfunctions::State$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="stepfunctions" data-topic="State" data-id="output">}\href{../../stepfunctions/html/State.html#method-output}{\code{stepfunctions::State$output()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="stepfunctions" data-topic="State" data-id="to_list">}\href{../../stepfunctions/html/State.html#method-to_list}{\code{stepfunctions::State$to_list()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="stepfunctions" data-topic="State" data-id="update_parameters">}\href{../../stepfunctions/html/State.html#method-update_parameters}{\code{stepfunctions::State$update_parameters()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
The Wait state **must contain exactly one** of `seconds`,
             `seconds_path`, `timestamp`, or `timestamp_path`.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Wait$new(
  state_id,
  seconds = NULL,
  seconds_path = NULL,
  timestamp = NULL,
  timestamp_path = NULL,
  comment = NULL,
  input_path = NULL,
  output_path = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{state_id}}{(str): State name whose length **must be** less than or equal
to 128 unicode characters. State names **must be** unique within
the scope of the whole state machine.}

\item{\code{seconds}}{(int): Wait duration specified in seconds.}

\item{\code{seconds_path}}{(str): Path applied to the state's input to select the
wait duration in seconds.}

\item{\code{timestamp}}{(str): Absolute expiry time, specified as an ISO-8601 extended
offset date-time format string.}

\item{\code{timestamp_path}}{(str): Path applied to the state's input to select the
timestamp to be used for wait duration.}

\item{\code{comment}}{(str, optional): Human-readable comment or description. (default: None)}

\item{\code{input_path}}{(str, optional): Path applied to the state’s raw input to select
some or all of it; that selection is used by the state. (default: '$')}

\item{\code{output_path}}{(str, optional): Path applied to the state’s output, producing
the effective output which serves as the raw input for the next state. (default: '$')}

\item{\code{...}}{: Extra field names to pass to Block class}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-allowed_fields"></a>}}
\if{latex}{\out{\hypertarget{method-allowed_fields}{}}}
\subsection{Method \code{allowed_fields()}}{
allowed extra fields
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Wait$allowed_fields()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Wait$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
