% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/template_pipeline_common.R
\name{WorkflowTemplate}
\alias{WorkflowTemplate}
\title{WorkflowTemplate Class}
\description{
Abstract class to create a template for Sagemaker workflows
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{WorkflowTemplate$new()}}
\item \href{#method-render_graph}{\code{WorkflowTemplate$render_graph()}}
\item \href{#method-get_workflow}{\code{WorkflowTemplate$get_workflow()}}
\item \href{#method-build_workflow_definition}{\code{WorkflowTemplate$build_workflow_definition()}}
\item \href{#method-create}{\code{WorkflowTemplate$create()}}
\item \href{#method-execute}{\code{WorkflowTemplate$execute()}}
\item \href{#method-format}{\code{WorkflowTemplate$format()}}
\item \href{#method-clone}{\code{WorkflowTemplate$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkflowTemplate$new(s3_bucket, workflow, role, client, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{s3_bucket}}{(str): S3 bucket under which the output artifacts from
the training job will be stored. The parent path used is built
using the format: ``s3://{s3_bucket}/{pipeline_name}/models/{job_name}/``.
In this format, `pipeline_name` refers to the keyword argument provided
for TrainingPipeline. If a `pipeline_name` argument was not provided,
one is auto-generated by the pipeline as `training-pipeline-<timestamp>`.
Also, in the format, `job_name` refers to the job name provided
when calling the :meth:`TrainingPipeline.run()` method.}

\item{\code{workflow}}{: Workflow for AWS State Machine.}

\item{\code{role}}{(str): An AWS IAM role (either name or full Amazon Resource Name (ARN)).
This role is used to create, manage, and execute the Step Functions workflows.}

\item{\code{client}}{(SFN.Client, optional): \code{\link[paws]{sfn}} client to use for attaching the existing
workflow in Step Functions to the Workflow object. If not provided,
a default \code{\link[paws]{sfn}} client for Step Functions will be automatically
created and used. (default: None)}

\item{\code{...}}{: currently not implemented}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-render_graph"></a>}}
\if{latex}{\out{\hypertarget{method-render_graph}{}}}
\subsection{Method \code{render_graph()}}{
Renders a visualization of the workflow graph.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkflowTemplate$render_graph(portrait = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{portrait}}{(bool, optional): Boolean flag set to `True` if the workflow
graph should be rendered in portrait orientation. Set to `False`,
if the graph should be rendered in landscape orientation. (default: False)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_workflow"></a>}}
\if{latex}{\out{\hypertarget{method-get_workflow}{}}}
\subsection{Method \code{get_workflow()}}{
Returns Workflow
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkflowTemplate$get_workflow()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-build_workflow_definition"></a>}}
\if{latex}{\out{\hypertarget{method-build_workflow_definition}{}}}
\subsection{Method \code{build_workflow_definition()}}{
Build the workflow definition for the inference pipeline with
             all the states involved.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkflowTemplate$build_workflow_definition()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
:class:`~stepfunctions.steps.states.Chain`: Workflow definition as
             a chain of states involved in the the inference pipeline.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create"></a>}}
\if{latex}{\out{\hypertarget{method-create}{}}}
\subsection{Method \code{create()}}{
Creates the workflow on Step Functions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkflowTemplate$create()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
str: The Amazon Resource Name (ARN) of the workflow created. If the workflow
             already existed, the ARN of the existing workflow is returned.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-execute"></a>}}
\if{latex}{\out{\hypertarget{method-execute}{}}}
\subsection{Method \code{execute()}}{
Run the inference pipeline.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkflowTemplate$execute(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{: Not yet implemented}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
:R:class:`~stepfunctions.workflow.Execution`: Running instance of the inference pipeline.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-format"></a>}}
\if{latex}{\out{\hypertarget{method-format}{}}}
\subsection{Method \code{format()}}{
format class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkflowTemplate$format()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkflowTemplate$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
