% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/steps_states.R
\name{Block}
\alias{Block}
\title{Base class}
\description{
Base class to abstract blocks used in Amazon States Language
             \url{https://states-language.net/spec.html}.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Block$new()}}
\item \href{#method-is_field_allowed}{\code{Block$is_field_allowed()}}
\item \href{#method-allowed_fields}{\code{Block$allowed_fields()}}
\item \href{#method-to_list}{\code{Block$to_list()}}
\item \href{#method-to_json}{\code{Block$to_json()}}
\item \href{#method-format}{\code{Block$format()}}
\item \href{#method-clone}{\code{Block$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize Block class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Block$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{: Field list to added to class}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_field_allowed"></a>}}
\if{latex}{\out{\hypertarget{method-is_field_allowed}{}}}
\subsection{Method \code{is_field_allowed()}}{
Check if field is allowed
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Block$is_field_allowed(field_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{field_name}}{(str): field name to check with class's allowed field list}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-allowed_fields"></a>}}
\if{latex}{\out{\hypertarget{method-allowed_fields}{}}}
\subsection{Method \code{allowed_fields()}}{
allowed extra fields
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Block$allowed_fields()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-to_list}{}}}
\subsection{Method \code{to_list()}}{
Convert class to named list
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Block$to_list()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_json"></a>}}
\if{latex}{\out{\hypertarget{method-to_json}{}}}
\subsection{Method \code{to_json()}}{
Serialize to a JSON formatted string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Block$to_json(pretty = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pretty}}{(bool, optional): Boolean flag set to `True` if JSON string
should be prettified. `False`, otherwise. (default: False)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
str: JSON formatted string representation of the block.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-format"></a>}}
\if{latex}{\out{\hypertarget{method-format}{}}}
\subsection{Method \code{format()}}{
class formatting
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Block$format()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Block$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
