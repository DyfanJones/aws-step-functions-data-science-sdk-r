% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow_stepfunctions.R
\name{Workflow}
\alias{Workflow}
\title{Workflow Class}
\description{
Class for creating and managing a workflow.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-list_workflows}{\code{Workflow$list_workflows()}}
\item \href{#method-new}{\code{Workflow$new()}}
\item \href{#method-attach}{\code{Workflow$attach()}}
\item \href{#method-create}{\code{Workflow$create()}}
\item \href{#method-update}{\code{Workflow$update()}}
\item \href{#method-execute}{\code{Workflow$execute()}}
\item \href{#method-list_executions}{\code{Workflow$list_executions()}}
\item \href{#method-delete}{\code{Workflow$delete()}}
\item \href{#method-render_graph}{\code{Workflow$render_graph()}}
\item \href{#method-get_cloudformation_template}{\code{Workflow$get_cloudformation_template()}}
\item \href{#method-format}{\code{Workflow$format()}}
\item \href{#method-print}{\code{Workflow$print()}}
\item \href{#method-clone}{\code{Workflow$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-list_workflows"></a>}}
\if{latex}{\out{\hypertarget{method-list_workflows}{}}}
\subsection{Method \code{list_workflows()}}{
Lists all the workflows in the account.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$list_workflows(max_items = 100, client = NULL, html = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{max_items}}{(int, optional): The maximum number of items to be returned. (default: 100)}

\item{\code{client}}{(SFN.Client, optional): boto3 client to use for the query. If
not provided, a default boto3 client for Step Functions will be
automatically created and used. (default: None)}

\item{\code{html}}{(bool, optional): Renders the list as an HTML table (If running in
an IPython environment). If the parameter is not provided, or set
to False, a Python list is returned. (default: False)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
list: The list of workflows. Refer to :meth:`.SFN.Client.list_state_machines()`
             for the response structure.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize Workflow Class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$new(
  name,
  definition,
  role,
  tags = list(),
  execution_input = NULL,
  timeout_seconds = NULL,
  comment = NULL,
  version = NULL,
  state_machine_arn = NULL,
  format_json = TRUE,
  client = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(str): The name of the workflow. A name must not contain:
- whitespace
- brackets `< > { } [ ]`
- wildcard characters `? *`
- special characters `` \" # % \ ^ | ~ \` $ & , ; : / ``
- control characters (`U+0000-001F`, `U+007F-009F`)}

\item{\code{definition}}{(State or Chain): The `Amazon States Language`
`<https://states-language.net/spec.html>`_ definition of the workflow.}

\item{\code{role}}{(str): The Amazon Resource Name (ARN) of the IAM role to use for creating,
managing, and running the workflow.}

\item{\code{tags}}{(list): Tags to be added when creating a workflow. Tags are key-value pairs
that can be associated with Step Functions workflows and activities. (default: [])}

\item{\code{execution_input}}{(ExecutionInput, optional): Placeholder collection that defines
the placeholder variables for the workflow execution. This is also used
to validate inputs provided when executing the workflow. (default: None)}

\item{\code{timeout_seconds}}{(int, optional): The maximum number of seconds an execution
of the workflow can run. If it runs longer than the specified time,
the workflow run fails with a `States.Timeout` Error Name. (default: None)}

\item{\code{comment}}{(str, optional): A human-readable description of the workflow. (default: None)}

\item{\code{version}}{(str, optional): The version of the Amazon States Language used
in the workflow. (default: None)}

\item{\code{state_machine_arn}}{(str, optional): The Amazon Resource Name (ARN) of
the workflow. (default: None)}

\item{\code{format_json}}{(bool, optional): Boolean flag set to `True` if workflow
definition and execution inputs should be prettified for this workflow.
`False`, otherwise. (default: True)}

\item{\code{client}}{(SFN.Client, optional): boto3 client to use for creating, managing,
and running the workflow on Step Functions. If not provided, a
default boto3 client for Step Functions will be automatically created
and used. (default: None)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-attach"></a>}}
\if{latex}{\out{\hypertarget{method-attach}{}}}
\subsection{Method \code{attach()}}{
Factory method to create an instance attached to an exisiting
             workflow in Step Functions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$attach(state_machine_arn, client = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{state_machine_arn}}{(str): The Amazon Resource Name (ARN) of the existing workflow.}

\item{\code{client}}{(SFN.Client, optional): boto3 client to use for attaching the existing
workflow in Step Functions to the Workflow object. If not provided,
a default boto3 client for Step Functions will be automatically
created and used. (default: None)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Workflow: Workflow object attached to the existing workflow in Step Functions.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create"></a>}}
\if{latex}{\out{\hypertarget{method-create}{}}}
\subsection{Method \code{create()}}{
Creates the workflow on Step Functions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$create()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
str: The Amazon Resource Name (ARN) of the workflow created. If the workflow
             already existed, the ARN of the existing workflow is returned.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-update"></a>}}
\if{latex}{\out{\hypertarget{method-update}{}}}
\subsection{Method \code{update()}}{
Updates an existing state machine by modifying its definition
             and/or role. Executions started immediately after calling this
             method may use the previous definition and role.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$update(definition = NULL, role = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{definition}}{(State or Chain, optional): The `Amazon States Language`
`<https://states-language.net/spec.html>`_ definition to update
the workflow with. (default: None)}

\item{\code{role}}{(str, optional): The Amazon Resource Name (ARN) of the IAM role
to use for creating, managing, and running the workflow. (default: None)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
str: The state machine definition and/or role updated. If the update fails,
None will be returned.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-execute"></a>}}
\if{latex}{\out{\hypertarget{method-execute}{}}}
\subsection{Method \code{execute()}}{
Starts a single execution of the workflow.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$execute(name = NULL, inputs = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(str, optional): The name of the workflow execution. If one is
not provided, a workflow execution name will be auto-generated. (default: None)}

\item{\code{inputs}}{(str, list or dict, optional): Input data for the workflow execution. (default: None)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
stepfunctions.workflow.Execution: An execution instance of the workflow.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-list_executions"></a>}}
\if{latex}{\out{\hypertarget{method-list_executions}{}}}
\subsection{Method \code{list_executions()}}{
Lists the executions for the workflow.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$list_executions(max_items = 100, status_filter = NULL, html = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{max_items}}{(int, optional): The maximum number of items to be returned. (default: 100)}

\item{\code{status_filter}}{(ExecutionStatus, optional): If specified, only list
the executions whose current status matches the given filter. (default: None)}

\item{\code{html}}{(bool, optional): Renders the list as an HTML table (If running
in an IPython environment). If the parameter is not provided, or
set to False, a Python list is returned. (default: False)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
list: List of workflow run instances.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-delete"></a>}}
\if{latex}{\out{\hypertarget{method-delete}{}}}
\subsection{Method \code{delete()}}{
Deletes the workflow, if it exists.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$delete()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-render_graph"></a>}}
\if{latex}{\out{\hypertarget{method-render_graph}{}}}
\subsection{Method \code{render_graph()}}{
Renders a visualization of the workflow graph.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$render_graph(portrait = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{portrait}}{(bool, optional): Boolean flag set to `True` if the workflow
graph should be rendered in portrait orientation. Set to `False`,
if the graph should be rendered in landscape orientation. (default: False)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_cloudformation_template"></a>}}
\if{latex}{\out{\hypertarget{method-get_cloudformation_template}{}}}
\subsection{Method \code{get_cloudformation_template()}}{
Returns a CloudFormation template that contains only the StateMachine
             resource. To reuse the CloudFormation template in a different region,
             please make sure to update the region specific AWS resources (e.g: Lambda
             ARN, Training Image) in the StateMachine definition.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$get_cloudformation_template()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-format"></a>}}
\if{latex}{\out{\hypertarget{method-format}{}}}
\subsection{Method \code{format()}}{
class formatting
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$format()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
print class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
